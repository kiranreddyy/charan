{
  "variables": {
    "AZURE_TENANT_ID":"",
    "AZURE_SUBSCRIPTION_ID":"",
    "AZURE_CLIENT_ID":"",
    "AZURE_CLIENT_SECRETE":"",

    "communicator": "",
    "winrm_username": "",
    "winrm_password": "",
    "winrm_use_ssl": "",
    "winrm_insecure": "",
    "winrm_timeout": "",
    
    "resource_group_name": "",
    "VirtualNetwork": "",
    "Subnet": "",
    "VirtualNetworkRG": "",
    
    "vm_name": "",
    "vm_size": "",
    "os_type": "",
    "sku": ""
  },

  "builders": [
    {
      "type": "azure-arm",
      
      "tenant_id": "{{user `AZURE_TENANT_ID`}}",
      "subscription_id": "{{user `AZURE_SUBSCRIPTION_ID`}}",
      "client_id": "{{user `AZURE_CLIENT_ID`}}",
      "client_secrete": "{{ user `AZURE_CLIENT_SECRETE`}}",
      
      "communicator": "{{user `communicator`}}",
      "winrm_username": "{{user `winrm_username`}}",
      "winrm_password": "{{user `winrm_password`}}",
      "winrm_use_ssl": "{{ user `winrm_use_ssl`}}",
      "winrm_insecure": "{{ user `winrm_insecure`}}",
      "winrm_timeout": "{{ user `winrm_timeout`}}",
      
      "build_resource_group_name": "{{user `resource_group_name`}}",
      "managed_image_resource_group_name": "{{user `resource_group_name`}}",
      "virtual_network_name": "{{user `Virtual_Network`}}",
      "virtual_network_subnet_name": "{{user `Subnet`}}",
      "virtual_network_resource_group_name": "{{user `Virtual_NetworkRG`}}",
      
      "managed_image_name": "{{user `vm_name`}}",
      "vm_size": "{{user `vm_size`}}",
      "image_offer": "{{user `offer`}}",
      "os_type": "{{user `os_type`}}",
      "image_sku": "{{ user `sku`}}",
   
      "azure_tags": {
        "bu": "sbo",
        "environment": "dev",
        "product": "ei"
      }
    }
  ],
  
  "provisioners": [ 
    {
      "type": "powershell",
      "inline": [
        "while ((Get-Service RdAgent).Status -ne 'Running') { Start-Sleep -s 5 }",
        "while ((Get-Service WindowsAzureGuestAgent).Status -ne 'Running') { Start-Sleep -s 5 }",
        "& $env:SystemRoot\\System32\\Sysprep\\Sysprep.exe /oobe /generalize /quiet /quit",
        "while($true) { $imageState = Get-ItemProperty HKLM:\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Setup\\State | Select ImageState; if($imageState.ImageState -ne 'IMAGE_STATE_GENERALIZE_RESEAL_TO_OOBE') { Write-Output $imageState.ImageState; Start-Sleep -s 10  } else { break } }"
      ]
    }
  ]
}
